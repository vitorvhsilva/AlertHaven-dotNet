// <auto-generated />
using System;
using Events.Infraestructure.Data.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Events.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Events.Domain.Entities.AlertaEntity", b =>
                {
                    b.Property<string>("IdAlerta")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("DataHoraAlerta")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("IdEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("MensagemAlerta")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("NivelAlerta")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.HasKey("IdAlerta");

                    b.HasIndex("IdEvento");

                    b.ToTable("TB_ALERTA");
                });

            modelBuilder.Entity("Events.Domain.Entities.EventoEntity", b =>
                {
                    b.Property<string>("IdEvento")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<DateTime?>("DataHoraEvento")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("IdIot")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("IntensidadeEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("LatitudeEvento")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("LongitudeEvento")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdIot");

                    b.ToTable("TB_EVENTO");
                });

            modelBuilder.Entity("Events.Domain.Entities.IotEntity", b =>
                {
                    b.Property<string>("IdIot")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<DateTime?>("DataHoraUltimaLeituraIot")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("LatitudeIot")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("LongitudeIot")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("StatusIot")
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("TipoIot")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<decimal>("UltimaLeituraIot")
                        .HasColumnType("NUMBER");

                    b.Property<string>("UnidadeMedidaIot")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.HasKey("IdIot");

                    b.ToTable("TB_IOT");
                });

            modelBuilder.Entity("Events.Domain.Entities.AlertaEntity", b =>
                {
                    b.HasOne("Events.Domain.Entities.EventoEntity", "Evento")
                        .WithMany("Alertas")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Events.Domain.Entities.EventoEntity", b =>
                {
                    b.HasOne("Events.Domain.Entities.IotEntity", "Iot")
                        .WithMany("Eventos")
                        .HasForeignKey("IdIot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Iot");
                });

            modelBuilder.Entity("Events.Domain.Entities.EventoEntity", b =>
                {
                    b.Navigation("Alertas");
                });

            modelBuilder.Entity("Events.Domain.Entities.IotEntity", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
